from dotenv import load_dotenv
import os
import telebot
from telebot import types

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
load_dotenv()
api_token = os.environ.get('TELEGRAM_BOT_TOKEN')
channels = ['@screener_web_eng', '@screener_web_ru']  # –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
custom_link = "https://stock-screener-pro.ru/auth_telegram_bot/telegram_bot_access/"  # –°—Å—ã–ª–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–µ–¥–µ—Ç –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(api_token)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
    markup = types.InlineKeyboardMarkup()
    for channel in channels:
        btn_subscribe = types.InlineKeyboardButton(text=f'Subscribe to {channel}', url=f'https://t.me/{channel[1:]}')
        markup.add(btn_subscribe)
    btn_check = types.InlineKeyboardButton(text='Check subscription üîÑ', callback_data='check_subscribe')
    markup.add(btn_check)
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    bot.send_message(
        message.chat.id,
        "Subscribe to all channels to proceed",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == "check_subscribe":
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
        not_subscribed = []
        for channel in channels:
            user_status = bot.get_chat_member(channel, call.from_user.id).status
            if user_status not in ['member', 'administrator', 'creator']:
                not_subscribed.append(channel)

        if not_subscribed:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–∫–∏–µ-—Ç–æ –∫–∞–Ω–∞–ª—ã
            bot.send_message(
                call.message.chat.id,
                f"‚ùå You are not subscribed to the following channels:\n" +
                "\n".join(not_subscribed) +
                "\nSubscribe to all channels to proceed."
            )
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã
            markup = types.InlineKeyboardMarkup()
            btn_link = types.InlineKeyboardButton(text="Go to the link üîó", url=custom_link)
            markup.add(btn_link)
            bot.send_message(
                call.message.chat.id,
                "‚úÖ Thanks for subscribing to all channels!\nNow you can visit the website using the link below:",
                reply_markup=markup
            )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
