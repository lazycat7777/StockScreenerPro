
services:
  webapp:
    container_name: webapp
    build: ./  
    ports:
      - "18080:18080"  
    volumes:
      - ./:/app  
      - ./static:/app/static
    env_file:
      - ./.env
    command: bash entrypoint.sh
    depends_on:
      - database
    networks:
      - webapp_network

  database:
    image: postgres:17
    container_name: postgre
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    ports:
      - 5432:5432
    networks:
      - webapp_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./.env
    ports:
      - 5050:80
    networks:
      - webapp_network

  worker:
    build: ./  
    hostname: worker
    volumes:
      - ./:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - webapp
      - database
    command: >
      bash -c "source /ctr-py-venv/bin/activate &&
      celery -A screener_website worker --loglevel=info"
    networks:
      - webapp_network

  redis:
    image: redis
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - webapp_network

  beat:
    build: ./  
    hostname: beat
    volumes:
      - ./:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - webapp
      - worker
      - database
    command: >
      bash -c "source /ctr-py-venv/bin/activate &&
      celery -A screener_website beat --loglevel=info"
    networks:
      - webapp_network

  flower:
    build: ./  
    hostname: flower
    ports:
      - "5555:5555"
    volumes:
      - ./:/app
    env_file:
      - ./.env      
    depends_on:
      - webapp
      - redis
      - worker
    command: >
      bash -c "source /ctr-py-venv/bin/activate &&
      celery -A screener_website flower"
    networks:
      - webapp_network

volumes:
  postgres_data:

networks:
  webapp_network:
